{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/mithilproof/Oleic/react-dep/metal-baby/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/mithilproof/Oleic/react-dep/metal-baby/src/components/Game.jsx\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  max-height: 150vw;\\n  background-image: \", \";\\n  display: flex;\\n  flex: 1;\\n  flex-direction: column;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  height: 100%;\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  max-width: 70vh;\\n  margin: 0 auto;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useContext, useRef, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport HouseMap from \"./HouseMap\";\nimport Hud from \"./Hud\";\nimport Modal from \"./Modal\";\nimport { gameTicked } from \"../actions\";\nimport GameStateContext from \"./GameStateContext\";\nvar Container = styled.div(_templateObject());\nvar Content = styled.div(_templateObject2(), function (_ref) {\n  var theme = _ref.theme;\n  return \"linear-gradient(\".concat(theme.tertiary, \", \").concat(theme.primary, \")\");\n});\n\nvar Game = function Game() {\n  var _useContext = useContext(GameStateContext),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch;\n\n  var timeoutRef = useRef(null);\n  var speedRef = useRef(null);\n  var playing = state.playing,\n      speed = state.speed; // TODO: find another way to achieve this\n  // store speed in a ref so that it is visible from within tick()\n\n  speedRef.current = speed;\n\n  var tick = function tick() {\n    dispatch(gameTicked());\n    timeoutRef.current = setTimeout(tick, speedRef.current * 1000);\n  }; // If the game starts, begin the game loop\n\n\n  useEffect(function () {\n    if (playing) {\n      tick();\n    } else {\n      clearInterval(timeoutRef.current);\n    }\n\n    return function () {\n      return clearInterval(timeoutRef.current);\n    };\n  }, [playing]);\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Hud, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(HouseMap, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })), React.createElement(Modal, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }));\n};\n\nexport default Game;","map":{"version":3,"sources":["/Users/mithilproof/Oleic/react-dep/metal-baby/src/components/Game.jsx"],"names":["React","useContext","useRef","useEffect","styled","HouseMap","Hud","Modal","gameTicked","GameStateContext","Container","div","Content","theme","tertiary","primary","Game","state","dispatch","timeoutRef","speedRef","playing","speed","current","tick","setTimeout","clearInterval"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,MAA5B,EAAoCC,SAApC,QAAqD,OAArD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,SAASC,UAAT,QAA2B,YAA3B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AAEA,IAAMC,SAAS,GAAGN,MAAM,CAACO,GAAV,mBAAf;AASA,IAAMC,OAAO,GAAGR,MAAM,CAACO,GAAV,qBAES;AAAA,MAAGE,KAAH,QAAGA,KAAH;AAAA,mCACCA,KAAK,CAACC,QADP,eACoBD,KAAK,CAACE,OAD1B;AAAA,CAFT,CAAb;;AASA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA,oBACWf,UAAU,CAACQ,gBAAD,CADrB;AAAA,MACTQ,KADS,eACTA,KADS;AAAA,MACFC,QADE,eACFA,QADE;;AAEjB,MAAMC,UAAU,GAAGjB,MAAM,CAAC,IAAD,CAAzB;AACA,MAAMkB,QAAQ,GAAGlB,MAAM,CAAC,IAAD,CAAvB;AAHiB,MAITmB,OAJS,GAIUJ,KAJV,CAITI,OAJS;AAAA,MAIAC,KAJA,GAIUL,KAJV,CAIAK,KAJA,EAMjB;AACA;;AACAF,EAAAA,QAAQ,CAACG,OAAT,GAAmBD,KAAnB;;AAEA,MAAME,IAAI,GAAG,SAAPA,IAAO,GAAM;AACjBN,IAAAA,QAAQ,CAACV,UAAU,EAAX,CAAR;AACAW,IAAAA,UAAU,CAACI,OAAX,GAAqBE,UAAU,CAACD,IAAD,EAAOJ,QAAQ,CAACG,OAAT,GAAmB,IAA1B,CAA/B;AACD,GAHD,CAViB,CAejB;;;AACApB,EAAAA,SAAS,CACP,YAAM;AACJ,QAAIkB,OAAJ,EAAa;AACXG,MAAAA,IAAI;AACL,KAFD,MAEO;AACLE,MAAAA,aAAa,CAACP,UAAU,CAACI,OAAZ,CAAb;AACD;;AACD,WAAO;AAAA,aAAMG,aAAa,CAACP,UAAU,CAACI,OAAZ,CAAnB;AAAA,KAAP;AACD,GARM,EASP,CAACF,OAAD,CATO,CAAT;AAYA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAKE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AASD,CArCD;;AAuCA,eAAeL,IAAf","sourcesContent":["import React, { useContext, useRef, useEffect } from \"react\";\nimport styled from \"styled-components\";\n\nimport HouseMap from \"./HouseMap\";\nimport Hud from \"./Hud\";\nimport Modal from \"./Modal\";\n\nimport { gameTicked } from \"../actions\";\nimport GameStateContext from \"./GameStateContext\";\n\nconst Container = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  max-width: 70vh;\n  margin: 0 auto;\n`;\n\nconst Content = styled.div`\n  max-height: 150vw;\n  background-image: ${({ theme }) =>\n    `linear-gradient(${theme.tertiary}, ${theme.primary})`};\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n`;\n\nconst Game = () => {\n  const { state, dispatch } = useContext(GameStateContext);\n  const timeoutRef = useRef(null);\n  const speedRef = useRef(null);\n  const { playing, speed } = state;\n\n  // TODO: find another way to achieve this\n  // store speed in a ref so that it is visible from within tick()\n  speedRef.current = speed;\n\n  const tick = () => {\n    dispatch(gameTicked());\n    timeoutRef.current = setTimeout(tick, speedRef.current * 1000);\n  };\n\n  // If the game starts, begin the game loop\n  useEffect(\n    () => {\n      if (playing) {\n        tick();\n      } else {\n        clearInterval(timeoutRef.current);\n      }\n      return () => clearInterval(timeoutRef.current);\n    },\n    [playing]\n  );\n\n  return (\n    <Container>\n      <Content>\n        <Hud />\n        <HouseMap />\n      </Content>\n      <Modal />\n    </Container>\n  );\n};\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}