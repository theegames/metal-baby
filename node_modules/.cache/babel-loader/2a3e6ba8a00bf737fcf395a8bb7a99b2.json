{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/mithilproof/Oleic/react-dep/metal-baby/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/mithilproof/Oleic/react-dep/metal-baby/src/components/TaskTrack/TaskTrack.jsx\";\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  position: absolute;\\n  margin-left: -0.3rem;\\n  width: \", \"%;\\n  top: 0;\\n  height: 100%;\\n  background-color: \", \";\\n  opacity: 0.8;\\n  border-right: \", \";\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  position: relative;\\n  display: flex;\\n  width: \", \"%;\\n  height: 100%;\\n  background-color: \", \";\\n  animation: \", \" \", \"s linear;\\n  animation-fill-mode: forwards;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  to {\\n    transform: translateX(-\", \"%);\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  position: relative;\\n  flex: 2;\\n  margin: 1rem 0;\\n  overflow: hidden;\\n  border-radius: 0.3rem;\\n  box-shadow: 1px 1px 1px 1px rgba(0, 0, 0, 0.1);\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useContext } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport { IDLE } from \"../../constants/taskTypes\";\nimport GameStateContext from \"../GameStateContext\";\nimport TaskBlock from \"./TaskBlock\";\nvar trackLength = 6;\nvar ticksBefore = 1;\nvar Container = styled.div(_templateObject());\nvar slide = keyframes(_templateObject2(), 100 / trackLength);\nvar TaskBlockContainer = styled.div(_templateObject3(), trackLength / (trackLength - 1) * 100, function (_ref) {\n  var theme = _ref.theme;\n  return theme.disabled;\n}, slide, function (props) {\n  return props.speed;\n});\nvar Clip = styled.div(_templateObject4(), 100 * ticksBefore / (trackLength - 1), function (_ref2) {\n  var theme = _ref2.theme;\n  return theme.background;\n}, function (_ref3) {\n  var theme = _ref3.theme;\n  return \" 0.2rem solid \".concat(theme.highlight);\n});\n\nvar TaskTrack = function TaskTrack() {\n  var _useContext = useContext(GameStateContext),\n      state = _useContext.state;\n\n  var tasks = state.tasks,\n      time = state.time,\n      speed = state.speed; // get only the tasks within the acceptable range\n\n  var getVisibleTasks = function getVisibleTasks() {\n    return Array.from({\n      length: trackLength\n    }).map(function (_, i) {\n      return tasks[i + time - ticksBefore] !== undefined ? tasks[i + time - ticksBefore] : IDLE;\n    });\n  };\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(TaskBlockContainer, {\n    key: time,\n    speed: speed,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, getVisibleTasks().map(function (task, i) {\n    return React.createElement(TaskBlock, {\n      key: time + i,\n      type: task,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    });\n  })), React.createElement(Clip, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }));\n};\n\nexport default TaskTrack;","map":{"version":3,"sources":["/Users/mithilproof/Oleic/react-dep/metal-baby/src/components/TaskTrack/TaskTrack.jsx"],"names":["React","useContext","styled","keyframes","IDLE","GameStateContext","TaskBlock","trackLength","ticksBefore","Container","div","slide","TaskBlockContainer","theme","disabled","props","speed","Clip","background","highlight","TaskTrack","state","tasks","time","getVisibleTasks","Array","from","length","map","_","i","undefined","task"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,MAAP,IAAiBC,SAAjB,QAAkC,mBAAlC;AAEA,SAASC,IAAT,QAAqB,2BAArB;AACA,OAAOC,gBAAP,MAA6B,qBAA7B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,IAAMC,WAAW,GAAG,CAApB;AACA,IAAMC,WAAW,GAAG,CAApB;AAEA,IAAMC,SAAS,GAAGP,MAAM,CAACQ,GAAV,mBAAf;AASA,IAAMC,KAAK,GAAGR,SAAH,qBAEkB,MAAMI,WAFxB,CAAX;AAMA,IAAMK,kBAAkB,GAAGV,MAAM,CAACQ,GAAV,qBAGZH,WAAW,IAAIA,WAAW,GAAG,CAAlB,CAAZ,GAAoC,GAHvB,EAKF;AAAA,MAAGM,KAAH,QAAGA,KAAH;AAAA,SAAeA,KAAK,CAACC,QAArB;AAAA,CALE,EAMTH,KANS,EAMA,UAAAI,KAAK;AAAA,SAAIA,KAAK,CAACC,KAAV;AAAA,CANL,CAAxB;AAUA,IAAMC,IAAI,GAAGf,MAAM,CAACQ,GAAV,qBAGE,MAAMF,WAAP,IAAuBD,WAAW,GAAG,CAArC,CAHD,EAMY;AAAA,MAAGM,KAAH,SAAGA,KAAH;AAAA,SAAeA,KAAK,CAACK,UAArB;AAAA,CANZ,EAQQ;AAAA,MAAGL,KAAH,SAAGA,KAAH;AAAA,iCAAgCA,KAAK,CAACM,SAAtC;AAAA,CARR,CAAV;;AAWA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAAA,oBACJnB,UAAU,CAACI,gBAAD,CADN;AAAA,MACdgB,KADc,eACdA,KADc;;AAAA,MAEdC,KAFc,GAESD,KAFT,CAEdC,KAFc;AAAA,MAEPC,IAFO,GAESF,KAFT,CAEPE,IAFO;AAAA,MAEDP,KAFC,GAESK,KAFT,CAEDL,KAFC,EAGtB;;AACA,MAAMQ,eAAe,GAAG,SAAlBA,eAAkB;AAAA,WACtBC,KAAK,CAACC,IAAN,CAAW;AAAEC,MAAAA,MAAM,EAAEpB;AAAV,KAAX,EAAoCqB,GAApC,CAAwC,UAACC,CAAD,EAAIC,CAAJ;AAAA,aACtCR,KAAK,CAACQ,CAAC,GAAGP,IAAJ,GAAWf,WAAZ,CAAL,KAAkCuB,SAAlC,GACIT,KAAK,CAACQ,CAAC,GAAGP,IAAJ,GAAWf,WAAZ,CADT,GAEIJ,IAHkC;AAAA,KAAxC,CADsB;AAAA,GAAxB;;AAOA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,kBAAD;AAAoB,IAAA,GAAG,EAAEmB,IAAzB;AAA+B,IAAA,KAAK,EAAEP,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGQ,eAAe,GAAGI,GAAlB,CAAsB,UAACI,IAAD,EAAOF,CAAP;AAAA,WACrB,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAEP,IAAI,GAAGO,CAAvB;AAA0B,MAAA,IAAI,EAAEE,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADqB;AAAA,GAAtB,CADH,CADF,EAME,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAUD,CArBD;;AAuBA,eAAeZ,SAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\n\nimport { IDLE } from \"../../constants/taskTypes\";\nimport GameStateContext from \"../GameStateContext\";\nimport TaskBlock from \"./TaskBlock\";\n\nconst trackLength = 6;\nconst ticksBefore = 1;\n\nconst Container = styled.div`\n  position: relative;\n  flex: 2;\n  margin: 1rem 0;\n  overflow: hidden;\n  border-radius: 0.3rem;\n  box-shadow: 1px 1px 1px 1px rgba(0, 0, 0, 0.1);\n`;\n\nconst slide = keyframes`\n  to {\n    transform: translateX(-${100 / trackLength}%);\n  }\n`;\n\nconst TaskBlockContainer = styled.div`\n  position: relative;\n  display: flex;\n  width: ${(trackLength / (trackLength - 1)) * 100}%;\n  height: 100%;\n  background-color: ${({ theme }) => theme.disabled};\n  animation: ${slide} ${props => props.speed}s linear;\n  animation-fill-mode: forwards;\n`;\n\nconst Clip = styled.div`\n  position: absolute;\n  margin-left: -0.3rem;\n  width: ${(100 * ticksBefore) / (trackLength - 1)}%;\n  top: 0;\n  height: 100%;\n  background-color: ${({ theme }) => theme.background};\n  opacity: 0.8;\n  border-right: ${({ theme }) => ` 0.2rem solid ${theme.highlight}`};\n`;\n\nconst TaskTrack = () => {\n  const { state } = useContext(GameStateContext);\n  const { tasks, time, speed } = state;\n  // get only the tasks within the acceptable range\n  const getVisibleTasks = () =>\n    Array.from({ length: trackLength }).map((_, i) =>\n      tasks[i + time - ticksBefore] !== undefined\n        ? tasks[i + time - ticksBefore]\n        : IDLE\n    );\n\n  return (\n    <Container>\n      <TaskBlockContainer key={time} speed={speed}>\n        {getVisibleTasks().map((task, i) => (\n          <TaskBlock key={time + i} type={task} />\n        ))}\n      </TaskBlockContainer>\n      <Clip />\n    </Container>\n  );\n};\n\nexport default TaskTrack;\n"]},"metadata":{},"sourceType":"module"}