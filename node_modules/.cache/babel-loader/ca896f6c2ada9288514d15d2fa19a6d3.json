{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/mithilproof/Oleic/react-dep/metal-baby/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/mithilproof/Oleic/react-dep/metal-baby/src/components/StatusBars/StatusBar.jsx\";\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteral([\"\\n  position: absolute;\\n  height: 100%;\\n  transition: width \", \"s linear;\\n  background-color: \", \";\\n  \", \";\\n  \", \";\\n\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n  position: relative;\\n  overflow: hidden;\\n  flex: 1;\\n  height: 1.2rem;\\n  border-radius: 0.6rem;\\n  margin-left: 0.2rem;\\n  background-color: \", \";\\n  box-shadow: 1px 1px 1px 1px rgba(0, 0, 0, 0.1);\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  width: 1.5rem;\\n  height: 1.5rem;\\n  border-radius: 50%;\\n  font-size: 1rem;\\n  background-color: \", \";\\n  color: \", \";\\n  box-shadow: 1px 1px 1px 1px rgba(0, 0, 0, 0.1);\\n  \", \";\\n  \", \";\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n      background: \", \" none;\\n    \"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n      background: \", \" none;\\n      transition: width \", \"s linear;\\n    \"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n      background: \", \" none;\\n      transition: width \", \"s linear;\\n    \"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex: 1;\\n  color: \", \";\\n  align-items: center;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useContext, useRef } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { initialNeeds, maxNeeds, needsDecay } from \"../../gameConfig\";\nimport GameStateContext from \"../GameStateContext\";\nvar Container = styled.div(_templateObject(), function (_ref) {\n  var theme = _ref.theme;\n  return theme.tertiary;\n});\n\nvar growthStyle = function growthStyle(_ref2) {\n  var growth = _ref2.growth,\n      speed = _ref2.speed,\n      theme = _ref2.theme;\n\n  if (growth === \"INCREASING\") {\n    return css(_templateObject2(), theme.highlight, speed / 6);\n  } else if (growth === \"DECREASING\") {\n    return css(_templateObject3(), theme.warning, speed / 6);\n  }\n};\n\nvar dangerStyle = function dangerStyle(_ref3) {\n  var value = _ref3.value,\n      max = _ref3.max,\n      theme = _ref3.theme;\n  var percentage = value / max;\n\n  if (percentage <= 0.2) {\n    return css(_templateObject4(), theme.danger);\n  }\n};\n\nvar IconContainer = styled.div(_templateObject5(), function (_ref4) {\n  var theme = _ref4.theme;\n  return theme.primary;\n}, function (_ref5) {\n  var theme = _ref5.theme;\n  return theme.background;\n}, growthStyle, dangerStyle);\nvar ProgressBarTrack = styled.div(_templateObject6(), function (_ref6) {\n  var theme = _ref6.theme;\n  return theme.background;\n});\nvar ActiveProgressBar = styled.span.attrs(function (props) {\n  return {\n    style: {\n      width: \"\".concat(props.value / props.max * 100, \"%\")\n    }\n  };\n})(_templateObject7(), function (props) {\n  return props.speed;\n}, function (_ref7) {\n  var theme = _ref7.theme;\n  return theme.primary;\n}, growthStyle, dangerStyle);\n\nvar StatusBar = function StatusBar(_ref8) {\n  var type = _ref8.type,\n      icon = _ref8.icon;\n\n  var _useContext = useContext(GameStateContext),\n      state = _useContext.state;\n\n  var lastValue = useRef(initialNeeds[type]);\n  var speed = state.speed,\n      gameNumber = state.gameNumber;\n  var value = state.needs[type];\n  var decay = needsDecay[type];\n  var max = maxNeeds[type];\n  var growth = null;\n\n  if (value < lastValue.current - decay) {\n    growth = \"DECREASING\";\n  } else if (value > lastValue.current) {\n    growth = \"INCREASING\";\n  } // store the value in the a ref for next time\n\n\n  lastValue.current = value;\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(IconContainer, {\n    value: value,\n    max: max,\n    growth: growth,\n    speed: speed,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: icon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  })), React.createElement(ProgressBarTrack, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(ActiveProgressBar // re-mounts the bars when a new game starts, removing animation\n  , {\n    key: gameNumber,\n    value: value,\n    max: max,\n    growth: growth,\n    speed: speed,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  })));\n};\n\nexport default StatusBar;","map":{"version":3,"sources":["/Users/mithilproof/Oleic/react-dep/metal-baby/src/components/StatusBars/StatusBar.jsx"],"names":["React","useContext","useRef","styled","css","initialNeeds","maxNeeds","needsDecay","GameStateContext","Container","div","theme","tertiary","growthStyle","growth","speed","highlight","warning","dangerStyle","value","max","percentage","danger","IconContainer","primary","background","ProgressBarTrack","ActiveProgressBar","span","attrs","props","style","width","StatusBar","type","icon","state","lastValue","gameNumber","needs","decay","current"],"mappings":"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","sourcesContent":["import React, { useContext, useRef } from \"react\";\nimport styled, { css } from \"styled-components\";\n\nimport { initialNeeds, maxNeeds, needsDecay } from \"../../gameConfig\";\nimport GameStateContext from \"../GameStateContext\";\n\nconst Container = styled.div`\n  display: flex;\n  flex: 1;\n  color: ${({ theme }) => theme.tertiary};\n  align-items: center;\n`;\n\nconst growthStyle = ({ growth, speed, theme }) => {\n  if (growth === \"INCREASING\") {\n    return css`\n      background: ${theme.highlight} none;\n      transition: width ${speed / 6}s linear;\n    `;\n  } else if (growth === \"DECREASING\") {\n    return css`\n      background: ${theme.warning} none;\n      transition: width ${speed / 6}s linear;\n    `;\n  }\n};\n\nconst dangerStyle = ({ value, max, theme }) => {\n  const percentage = value / max;\n  if (percentage <= 0.2) {\n    return css`\n      background: ${theme.danger} none;\n    `;\n  }\n};\n\nconst IconContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 1.5rem;\n  height: 1.5rem;\n  border-radius: 50%;\n  font-size: 1rem;\n  background-color: ${({ theme }) => theme.primary};\n  color: ${({ theme }) => theme.background};\n  box-shadow: 1px 1px 1px 1px rgba(0, 0, 0, 0.1);\n  ${growthStyle};\n  ${dangerStyle};\n`;\n\nconst ProgressBarTrack = styled.div`\n  position: relative;\n  overflow: hidden;\n  flex: 1;\n  height: 1.2rem;\n  border-radius: 0.6rem;\n  margin-left: 0.2rem;\n  background-color: ${({ theme }) => theme.background};\n  box-shadow: 1px 1px 1px 1px rgba(0, 0, 0, 0.1);\n`;\n\nconst ActiveProgressBar = styled.span.attrs(props => ({\n  style: {\n    width: `${(props.value / props.max) * 100}%`\n  }\n}))`\n  position: absolute;\n  height: 100%;\n  transition: width ${props => props.speed}s linear;\n  background-color: ${({ theme }) => theme.primary};\n  ${growthStyle};\n  ${dangerStyle};\n`;\n\nconst StatusBar = ({ type, icon }) => {\n  const { state } = useContext(GameStateContext);\n  const lastValue = useRef(initialNeeds[type]);\n\n  const { speed, gameNumber } = state;\n  const value = state.needs[type];\n  const decay = needsDecay[type];\n  const max = maxNeeds[type];\n\n  let growth = null;\n  if (value < lastValue.current - decay) {\n    growth = \"DECREASING\";\n  } else if (value > lastValue.current) {\n    growth = \"INCREASING\";\n  }\n  // store the value in the a ref for next time\n  lastValue.current = value;\n\n  return (\n    <Container>\n      <IconContainer value={value} max={max} growth={growth} speed={speed}>\n        <i className={icon} />\n      </IconContainer>\n      <ProgressBarTrack>\n        <ActiveProgressBar\n          // re-mounts the bars when a new game starts, removing animation\n          key={gameNumber}\n          value={value}\n          max={max}\n          growth={growth}\n          speed={speed}\n        />\n      </ProgressBarTrack>\n    </Container>\n  );\n};\n\nexport default StatusBar;\n"]},"metadata":{},"sourceType":"module"}